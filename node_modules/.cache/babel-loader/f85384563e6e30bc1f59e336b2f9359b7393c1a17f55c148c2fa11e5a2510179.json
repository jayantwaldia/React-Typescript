{"ast":null,"code":"var _jsxFileName = \"/Users/jayantwaldia/Desktop/playground/React-Typescript/src/components/state/Counter.tsx\",\n  _s = $RefreshSig$();\nimport { useReducer } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  count: 0\n};\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'increment':\n      return {\n        count: state.count + action.payload\n      };\n    case 'decrement':\n      return {\n        count: state.count - action.payload\n      };\n    default:\n      return state;\n  }\n}\nexport const Counter = () => {\n  _s();\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Count : \", state.count, /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch({\n        type: 'increment',\n        payload: 1\n      }),\n      children: \"Increment 1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch({\n        type: 'decrement',\n        payload: 1\n      }),\n      children: \"Decrement 1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n_s(Counter, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n_c = Counter;\nvar _c;\n$RefreshReg$(_c, \"Counter\");","map":{"version":3,"names":["useReducer","initialState","count","reducer","state","action","type","payload","Counter","dispatch"],"sources":["/Users/jayantwaldia/Desktop/playground/React-Typescript/src/components/state/Counter.tsx"],"sourcesContent":["import { useReducer } from \"react\"\n\n\ntype CounterState = {\n    count: number\n}\n\ntype CounterAction = {\n    type: string\n    payload: number\n}\n\n\n\nconst initialState = { count: 0 }\n\nfunction reducer(state: CounterState, action: CounterAction) {\n    switch (action.type) {\n        case 'increment':\n            return { count: state.count + action.payload }\n        case 'decrement':\n            return { count: state.count - action.payload }\n        default:\n            return state\n    }\n}\n\n\nexport const Counter = () => {\n    const [state, dispatch] = useReducer(reducer, initialState)\n    return (\n        <div>\n            Count : {state.count}\n            <button onClick={() => dispatch({ type: 'increment', payload: 1 })}>Increment 1</button>\n            <button onClick={() => dispatch({ type: 'decrement', payload: 1 })}>Decrement 1</button>\n        </div>\n    )\n}\n"],"mappings":";;AAAA,SAASA,UAAU,QAAQ,OAAO;AAAA;AAclC,MAAMC,YAAY,GAAG;EAAEC,KAAK,EAAE;AAAE,CAAC;AAEjC,SAASC,OAAO,CAACC,KAAmB,EAAEC,MAAqB,EAAE;EACzD,QAAQA,MAAM,CAACC,IAAI;IACf,KAAK,WAAW;MACZ,OAAO;QAAEJ,KAAK,EAAEE,KAAK,CAACF,KAAK,GAAGG,MAAM,CAACE;MAAQ,CAAC;IAClD,KAAK,WAAW;MACZ,OAAO;QAAEL,KAAK,EAAEE,KAAK,CAACF,KAAK,GAAGG,MAAM,CAACE;MAAQ,CAAC;IAClD;MACI,OAAOH,KAAK;EAAA;AAExB;AAGA,OAAO,MAAMI,OAAO,GAAG,MAAM;EAAA;EACzB,MAAM,CAACJ,KAAK,EAAEK,QAAQ,CAAC,GAAGT,UAAU,CAACG,OAAO,EAAEF,YAAY,CAAC;EAC3D,oBACI;IAAA,uBACaG,KAAK,CAACF,KAAK,eACpB;MAAQ,OAAO,EAAE,MAAMO,QAAQ,CAAC;QAAEH,IAAI,EAAE,WAAW;QAAEC,OAAO,EAAE;MAAE,CAAC,CAAE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAqB,eACxF;MAAQ,OAAO,EAAE,MAAME,QAAQ,CAAC;QAAEH,IAAI,EAAE,WAAW;QAAEC,OAAO,EAAE;MAAE,CAAC,CAAE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAqB;EAAA;IAAA;IAAA;IAAA;EAAA,QACtF;AAEd,CAAC;AAAA,GATYC,OAAO;AAAA,KAAPA,OAAO;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}